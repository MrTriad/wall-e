/**
 * @module dbschemas
 * @description Module containing the database schema interfaces. Generated with pg-to-ts
 * @category TA-NK_database
 */

/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.0
 * $ pg-to-ts generate -c postgresql://username:password@127.0.0.1/TestWDB1 -t author -t data -t database_metadata -t forum_path -t origin -t origin_history -t source -t source_telegram -t source_thread -s public
 *
 */


export type Json = unknown;

// Table author
export interface Author {
  _id_author: number;
  tag: string | null;
  username: string;
  description: string | null;
}
export interface AuthorInput {
  _id_author?: number;
  tag?: string | null;
  username: string;
  description?: string | null;
}
const author = {
  tableName: 'author',
  columns: ['_id_author', 'tag', 'username', 'description'],
  requiredForInsert: ['username'],
  primaryKey: '_id_author',
  foreignKeys: {},
  $type: null as unknown as Author,
  $input: null as unknown as AuthorInput
} as const;

// Table data
export interface Data {
  _id_data: number;
  email_address: string | null;
  phone_number: string | null;
  ip_address: string | null;
  username: string | null;
  misc: Json | null;
  _og_hashmd5: string;
}
export interface DataInput {
  _id_data?: number;
  email_address?: string | null;
  phone_number?: string | null;
  ip_address?: string | null;
  username?: string | null;
  misc?: Json | null;
  _og_hashmd5: string;
}
const data = {
  tableName: 'data',
  columns: ['_id_data', 'email_address', 'phone_number', 'ip_address', 'username', 'misc', '_og_hashmd5'],
  requiredForInsert: ['_og_hashmd5'],
  primaryKey: '_id_data',
  foreignKeys: { _og_hashmd5: { table: 'database_metadata', column: '_og_hashmd5', $type: null as unknown as DatabaseMetadata }, },
  $type: null as unknown as Data,
  $input: null as unknown as DataInput
} as const;

// Table database_metadata
export interface DatabaseMetadata {
  _og_hashmd5: string;
  name: string | null;
  breach_time: Date | number | null;
  og_filename: string | null;
  is_hashed: boolean | null;
  is_salted: boolean | null;
  _id_source: number | null;
}
export interface DatabaseMetadataInput {
  _og_hashmd5: string;
  name?: string | null;
  breach_time?: Date | number | null;
  og_filename?: string | null;
  is_hashed?: boolean | null;
  is_salted?: boolean | null;
  _id_source?: number | null;
}
const database_metadata = {
  tableName: 'database_metadata',
  columns: ['_og_hashmd5', 'name', 'breach_time', 'og_filename', 'is_hashed', 'is_salted', '_id_source'],
  requiredForInsert: ['_og_hashmd5'],
  primaryKey: '_og_hashmd5',
  foreignKeys: { _id_source: { table: 'source', column: '_id_source', $type: null as unknown as Source }, },
  $type: null as unknown as DatabaseMetadata,
  $input: null as unknown as DatabaseMetadataInput
} as const;

// Table forum_path
export interface ForumPath {
  _id_forum_path?: number;
  next_page_path: string;
  table_body_path: string;
  thread_link_path: string;
  thread_title_path: string;
  thread_description_path: string;
  thread_pubblication_date_path: string;
  is_auto_generated?: boolean;
  _id_origin: number;
}
export interface ForumPathInput {
  _id_forum_path?: number;
  next_page_path?: string;
  table_body_path?: string;
  thread_link_path?: string;
  thread_title_path?: string;
  thread_description_path?: string;
  thread_pubblication_date_path?: string;
  is_auto_generated?: boolean;
  _id_origin?: number | null;
}
const forum_path = {
  tableName: 'forum_path',
  columns: ['_id_forum_path', 'next_page_path', 'table_body_path', 'thread_link_path', 'thread_title_path', 'thread_description_path', 'thread_pubblication_date_path', 'is_auto_generated', '_id_origin'],
  requiredForInsert: ['next_page_path', 'table_body_path', 'thread_link_path', 'thread_title_path', 'thread_description_path', 'thread_pubblication_date_path', 'is_auto_generated', '_id_origin'],
  primaryKey: '_id_forum_path',
  foreignKeys: { _id_origin: { table: 'origin', column: '_id_origin', $type: null as unknown as Origin }, },
  $type: null as unknown as ForumPath,
  $input: null as unknown as ForumPathInput
} as const;

// Table origin
export interface Origin {
  _id_origin: number;
  domain: string;
  name: string | null;
  is_dead_score: number | null;
  category: number;
}
export interface OriginInput {
  _id_origin?: number;
  domain?: string;
  name?: string | null;
  is_dead_score?: number | null;
  category?: number;
}
const origin = {
  tableName: 'origin',
  columns: ['_id_origin', 'domain', 'name', 'is_dead_score', 'category'],
  requiredForInsert: ['domain', 'category'],
  primaryKey: '_id_origin',
  foreignKeys: {},
  $type: null as unknown as Origin,
  $input: null as unknown as OriginInput
} as const;

// Table origin_history
export interface OriginHistory {
  _id_origin_history: number;
  additional_infos: string | null;
  updated_time: Date | number | null;
  _id_origin: number;
}
export interface OriginHistoryInput {
  _id_origin_history?: number;
  additional_infos?: string | null;
  updated_time?: Date | number | null;
  _id_origin: number;
}
const origin_history = {
  tableName: 'origin_history',
  columns: ['_id_origin_history', 'additional_infos', 'updated_time', '_id_origin'],
  requiredForInsert: ['_id_origin'],
  primaryKey: '_id_origin_history',
  foreignKeys: { _id_origin: { table: 'origin', column: '_id_origin', $type: null as unknown as Origin }, },
  $type: null as unknown as OriginHistory,
  $input: null as unknown as OriginHistoryInput
} as const;

// Table source
export interface Source {
  _id_source: number;
  spam_score: number | null;
  published_time: Date | number | null;
  crawled_time: Date | number;
  updated_time: Date | number;
  _id_origin: number;
  _id_author: number | null;
}
export interface SourceInput {
  _id_source?: number;
  spam_score?: number | null;
  published_time?: Date | number | null;
  crawled_time: Date | number;
  updated_time: Date | number;
  _id_origin: number;
  _id_author?: number | null;
}
const source = {
  tableName: 'source',
  columns: ['_id_source', 'spam_score', 'published_time', 'crawled_time', 'updated_time', '_id_origin', '_id_author'],
  requiredForInsert: ['crawled_time', 'updated_time', '_id_origin'],
  primaryKey: '_id_source',
  foreignKeys: {
    _id_origin: { table: 'origin', column: '_id_origin', $type: null as unknown as Origin },
    _id_author: { table: 'author', column: '_id_author', $type: null as unknown as Author },
  },
  $type: null as unknown as Source,
  $input: null as unknown as SourceInput
} as const;

// Table source_telegram
export interface SourceTelegram {
  _id_source_telegram: number;
  message_text: string;
  views_count: number | null;
  shares_count: number | null;
  _id_source: number | null;
}
export interface SourceTelegramInput {
  _id_source_telegram?: number;
  message_text: string;
  views_count?: number | null;
  shares_count?: number | null;
  _id_source?: number | null;
}
const source_telegram = {
  tableName: 'source_telegram',
  columns: ['_id_source_telegram', 'message_text', 'views_count', 'shares_count', '_id_source'],
  requiredForInsert: ['message_text'],
  primaryKey: '_id_source_telegram',
  foreignKeys: { _id_source: { table: 'source', column: '_id_source', $type: null as unknown as Source }, },
  $type: null as unknown as SourceTelegram,
  $input: null as unknown as SourceTelegramInput
} as const;

// Table source_thread
export interface SourceThread {
  _id_source_thread: number;
  url: string;
  title: string;
  description: string;
  replies_count: number | null;
  views_count: number | null;
  _id_source: number | null;
}
export interface SourceThreadInput {
  _id_source_thread?: number;
  url: string;
  title: string;
  description: string;
  replies_count?: number | null;
  views_count?: number | null;
  _id_source?: number | null;
}
const source_thread = {
  tableName: 'source_thread',
  columns: ['_id_source_thread', 'url', 'title', 'description', 'replies_count', 'views_count', '_id_source'],
  requiredForInsert: ['url', 'title', 'description'],
  primaryKey: '_id_source_thread',
  foreignKeys: { _id_source: { table: 'source', column: '_id_source', $type: null as unknown as Source }, },
  $type: null as unknown as SourceThread,
  $input: null as unknown as SourceThreadInput
} as const;


export interface TableTypes {
  author: {
    select: Author;
    input: AuthorInput;
  };
  data: {
    select: Data;
    input: DataInput;
  };
  database_metadata: {
    select: DatabaseMetadata;
    input: DatabaseMetadataInput;
  };
  forum_path: {
    select: ForumPath;
    input: ForumPathInput;
  };
  origin: {
    select: Origin;
    input: OriginInput;
  };
  origin_history: {
    select: OriginHistory;
    input: OriginHistoryInput;
  };
  source: {
    select: Source;
    input: SourceInput;
  };
  source_telegram: {
    select: SourceTelegram;
    input: SourceTelegramInput;
  };
  source_thread: {
    select: SourceThread;
    input: SourceThreadInput;
  };
}

export const tables = {
  author,
  data,
  database_metadata,
  forum_path,
  origin,
  origin_history,
  source,
  source_telegram,
  source_thread,
}
